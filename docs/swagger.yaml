basePath: /v1/api
definitions:
  model.LoginInput:
    properties:
      user_account:
        type: string
      user_password:
        type: string
    type: object
  model.RegisterInput:
    properties:
      verify_key:
        type: string
      verify_purpose:
        type: string
      verify_type:
        type: integer
    type: object
  model.SetupTwoFactorAuthInput:
    properties:
      two_factor_auth_type:
        type: string
      two_factor_email:
        type: string
      user_id:
        type: integer
    type: object
  model.UpdatePasswordRegisterInput:
    properties:
      user_password:
        type: string
      user_token:
        type: string
    type: object
  model.VerifyInput:
    properties:
      verify_code:
        type: string
      verify_key:
        type: string
    type: object
  response.ResponseData:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:8002
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: github.com/OnlyLight/go-ecommerce-api
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://github.com/OnlyLight/go-ecommerce-api
  title: API Documentation Ecommerce Backend
  version: 1.0.0
paths:
  /two_factor/setup:
    post:
      consumes:
      - application/json
      description: When user is registered send otp to email
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.SetupTwoFactorAuthInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: User Registeration
      tags:
      - account management
  /user/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: User Login
      tags:
      - account management
  /user/register:
    post:
      consumes:
      - application/json
      description: When user is registered send otp to email
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: User Registeration
      tags:
      - account management
  /user/update_pass_register:
    post:
      consumes:
      - application/json
      description: Update Password Register
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePasswordRegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: User UpdatePasswordRegister
      tags:
      - account management
  /user/verify_account:
    post:
      consumes:
      - application/json
      description: Verify OTP
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.VerifyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: User VerifyOTP
      tags:
      - account management
swagger: "2.0"
